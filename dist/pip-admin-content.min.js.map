{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/blobs/AddBlobsController.ts","src/blobs/AddBlobsService.ts","src/blobs/BlobsPage.ts","src/blobs/BlobsPanel.ts","src/common/pipTimeZone.ts","src/common/search/SearchRow.ts","src/data/BlobsDataService.ts","src/data/FileInfo.ts","src/data/FileInfoDataPage.ts","src/data/FilesDataService.ts","src/files/AddFilesController.ts","src/files/AddFilesService.ts","src/files/FilesPage.ts","src/files/FilesPanel.ts","src/index.ts","src/rest/BlobsDataResources.ts","src/rest/FilesDataResources.ts","temp/pip-admin-content-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","admin","content","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","AddBlobDialogController","$inject","prototype","onOk","_this","edit","$mdDialog","hide","blob","localBlob","uploadUrl","pipRest","serverUrl","pipFileUpload","upload","data","err","onCancel","cancel","filterBlobsCollections","search","result","blobsCollections","blobs","toLowerCase","indexOf","push","params","$rootScope","theme","$theme","errorCallback","callback","blobsCollection","retry","setBlob","controller","Object","defineProperty","value","AddBlobsService","show","successCallback","cancelCallback","_mdDialog","targetEvent","event","templateUrl","controllerAs","locals","service","3","appHeader","pipNavService","appbar","parts","logo","icon","title","addShadow","showMenu","breadcrumb","text","actions","BlobsController","onRetry","$window","history","back","$scope","$state","$mdMedia","$injector","has","get","configureBlobsRoute","$stateProvider","state","url","auth","4","ToolsBlobsState","Progress","Data","Empty","BlobsPanelBindings","readBlobs","pipBlobsData","results","console","log","BlobsPanelController","addBlob","pipAddBlobsDialog","item","$location","pipTransaction","$log","pipConfirmationDialog","pipToasts","pipMedia","_start","error","transaction","create","component","isDisable","ngDisable","_scope","_","isFunction","onSearch","localSearch","_timeout","pipOnSearch","SearchRowController","onClear","$element","$attrs","$timeout","onKeyPress","keyCode","stopPropagation","preventDefault","addClass","$watch","directive","scope","ngDisabled","BlobsData","start","take","skip","total","getResource","updateBlob","blob_id","update","createBlob","save","deleteBlobById","id","delete","$stateParams","pipSession","RESOURCE","BlobsDataProvider","$get","_service","provider","8","File","9","FileInfoDataPage","FilesData","readFiles","readFilesGroups","updateFile","file_id","createFile","deleteFileById","FilesDataProvider","12","13","FileDialogData","file","localFile","description","collection","Collection","AddFileDialogController","filterFilesCollections","each","filesCollections","files","filesCollection","setFile","14","clickOutsideToClose","then","AddFilesService","FilesController","configureFilesRoute","angular","config","16","FileInfo_1","ToolsFilesState","begin","end","pipFilesData","filesSections","onFilesRead","selectItem","index","selectIndex","Search","readFilesInSection","clear","addFile","pipAddFileDialog","saveNewFile","FilesPanelController","newItem","thumbnail_id","content_id","name","group","saveNewFileCallback","contentType","JSON","parse","saveNewFileError","showError","openDeleteDialog","deleteFile","Items","remove","dataIndex","deleteFileError","oldItem","fileName","updateFileItem","cloneDeep","updateFileError","findIndex","Start","filter","section","split","readFilesError","onError","download","getSelectDropdown","bindings","FilesPanelBindings","17","configBlobsResources","pipRestProvider","registerPagedCollection","page","method","isArray","19","configFilesResources","20","run","$templateCache","put"],"mappings":"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","file":"pip-admin-content.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\n\n\nexport class AddBlobDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public edit: boolean;\n    public blob: any;\n    public localBlob: any;\n    public blobsCollections: string[];\n    public callback: Function;\n    public errorCallback: Function;\n    public cancel: Function;\n    public retry: Function;\n    public setBlob: Function;\n\n    constructor(\n        params,\n        $mdDialog: angular.material.IDialogService,\n        $rootScope,\n        private pipFileUpload: pip.files.IFileUploadService,\n        private pipRest: pip.rest.IRestService) {\n        \"ngInject\";\n\n        //this.pipBlobUpload.globalProgress = null;\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope.$theme;\n        this.blob = params.blob || {};\n        this.errorCallback = params.errorCallback;\n        this.callback = params.callback;\n        this.blobsCollections = params.blobsCollection;\n        if (params.blob) {\n            this.edit = true;\n        }\n        this.cancel = () => { this.onCancel(); };\n        this.retry = () => { this.onOk(); };\n        this.setBlob = (blob) => {\n            this.localBlob = blob;\n        }\n    }\n\n    public onOk() {\n\n        if (!this.edit) {\n            if (this.localBlob == null) {\n                return;\n            }\n\n            let uploadUrl: string = this.pipRest.serverUrl + \"/api/1.0/blobs\";\n\n            this.pipFileUpload.upload(\n                this.localBlob,\n                uploadUrl,\n                (data: any, err: any) => {\n                    if (!err) {\n                        this.$mdDialog.hide(data);\n                    }\n                }\n            );\n        } else {\n            this.$mdDialog.hide(this.blob);\n        }\n\n    }\n    /*\n      public globalProgress():string {\n          return this.pipBlobUpload.globalProgress;\n      }*/\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n\n    public filterBlobsCollections(search: string) {\n        let result = [];\n        _.each(this.blobsCollections, (blobs: string) => {\n            if (blobs.toLowerCase().indexOf(search.toLowerCase()) > -1) result.push(blobs);\n        });\n\n        return result;\n    }\n}\n\nangular\n    .module('pipAddBlobsDialog', ['ngMaterial', 'pipFiles', 'pipFiles.Templates'])\n    .controller('pipAddBlobDialogController', AddBlobDialogController);\n\nimport './AddBlobsService';","\n\nexport interface IAddBlobsService {\n    show(params: any, successCallback?: (SVGFilterElement) => void, cancelCallback?: () => void): any;\n}\n\nclass AddBlobsService implements IAddBlobsService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (blob) => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'blobs/AddBlobsDialog.html',\n            controller: 'pipAddBlobDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((blob) => {\n            if (successCallback) {\n                successCallback(blob);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipAddBlobsDialog')\n    .service('pipAddBlobsDialog', AddBlobsService);","class BlobsController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Blobs';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureBlobsRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('blobs', {\n            url: '/blobs',\n            controller: BlobsController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'blobs/BlobsPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipBlobsPage', ['pipNav'])\n        .config(configureBlobsRoute)\n\n})();\n","import { IBlobsDataService } from '../data/IBlobsDataService';\n\nimport {\n    IAddBlobsService\n} from './AddBlobsService';\n\nclass ToolsBlobsState {\n    static Progress: string = 'progress';\n    static Data: string = 'data';\n    static Empty: string = 'empty';\n}\n\n\ninterface IBlobsPanelBindings {\n    [key: string]: any;\n}\n\nconst BlobsPanelBindings: IBlobsPanelBindings = {\n\n}\n\nclass BlobsPanelChanges implements ng.IOnChangesObject, IBlobsPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass BlobsPanelController {\n    //private _dialog: IAddBlobsService;\n    private _start: number = 0;\n    public currentSection: any;\n    public blobsSections: any;\n    public selectIndex: number;\n    public details: boolean;\n    public state: string;\n    public error: string = null;\n    public transaction: pip.services.Transaction;\n    public search: string = null;\n    public blobs: any[];\n\n    constructor(\n        $window: ng.IWindowService,\n        private $location: ng.ILocationService,\n        $scope: ng.IScope,\n        pipNavService: pip.nav.INavService,\n        pipTransaction: pip.services.ITransactionService,\n        $log: ng.ILogService,\n        private pipConfirmationDialog,\n        private pipAddBlobsDialog: IAddBlobsService,\n        private pipToasts: pip.controls.IToastService,\n        private $state: ng.ui.IStateService,\n        private pipBlobsData: IBlobsDataService,\n        public pipMedia: pip.layouts.IMediaService) {\n\n        this.transaction = pipTransaction.create('blobs');\n        this.state = ToolsBlobsState.Progress;\n        this.readBlobs();\n    }\n    private readBlobs() {\n\n        this.pipBlobsData.readBlobs(null, 0, 100, (results) => {\n            this.blobs = results.data; console.log(this.blobs, results);\n            this.state = ToolsBlobsState.Data;\n        });\n    }\n\n    public addBlob(): void {\n\n        this.pipAddBlobsDialog.show({},\n            (item) => {\n                this.blobs.push(item);\n            });\n    }\n\n}\n\n(() => {\n    angular\n        .module('pipBlobsPanel', ['pipLists', 'pipBehaviors', 'pipButtons'])\n        .component('pipBlobsPanel', {\n            bindings: BlobsPanelBindings,\n            templateUrl: 'blobs/BlobsPanel.html',\n            controller: BlobsPanelController\n        })\n\n})();\n","//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlwdGltZXpvbmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzcmMvY29tbW9uL3BpcFRpbWVab25lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIiXX0=","class SearchRowController {\n    private _element;\n    private _scope: angular.IScope;\n    private _timeout: ng.ITimeoutService;\n    private pipOnSearch: Function;\n    private ngDisable: Function;\n\n    public localSearch: string;\n    \n    constructor(\n        $element: any,\n        $attrs: angular.IAttributes,\n        $scope: angular.IScope,\n        $timeout: ng.ITimeoutService\n    ) {\n        \"ngInject\";\n\n        $element.addClass('pip-search-row');\n        $element.addClass('flex');\n\n        this._element = $element;\n        this._scope = $scope;\n        this._timeout = $timeout;\n\n        this.pipOnSearch = $scope['onSearch'] ?  $scope['onSearch'] : null;\n\n        $scope.$watch('search', (search: string) => {\n            if (search != this.localSearch) {\n                this.localSearch = search;\n            }\n        });\n    }\n\n    public isDisable(): boolean {\n        this.ngDisable = this._scope['ngDisabled'] ? this._scope['ngDisabled'] : null;\n\n        return _.isFunction(this.ngDisable) && this.ngDisable();\n    }\n\n    public onSearch(): void {\n        if (this.isDisable()) {\n            return;\n        }\n        this._scope['search'] = this.localSearch;        \n\n        this._timeout(() => {\n            if (_.isFunction(this.pipOnSearch)) {\n                this.pipOnSearch();\n            }            \n        }, 200);\n    }\n    \n    public onClear() {\n        if (this.isDisable()) {\n            return;\n        }\n\n        this.localSearch = null;\n        this.onSearch();        \n    }\n\n    public onKeyPress = function (event: JQueryKeyEventObject): void {\n        if (event.keyCode === 13) {\n            event.stopPropagation();\n            event.preventDefault();\n            this.onSearch()\n        }\n    } \n\n}\n\n(() => {\n    function SearchRowDirective() {\n        return {\n            restrict: 'E',\n            controller: SearchRowController,\n            controllerAs: 'searchRow',\n            scope: {\n                search: '=pipSearch',\n                onSearch: '&pipOnSearch',\n                ngDisabled: '&'\n            },\n            templateUrl: 'common/search/SearchRow.html'\n        };\n    }\n\n    angular\n        .module('pipDirective', [])\n        .directive('pipSearchRow', SearchRowDirective);\n\n})();","import { IBlobsDataService, IBlobsDataProvider } from './IBlobsDataService';\n\nclass BlobsData implements IBlobsDataService {\n    private RESOURCE: string = 'blobs';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n    public readBlobs(params: any, start: number = 0, take: number = 100, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        params.skip = start;\n        params.total = true;\n        params.take = take;\n        return this.pipRest.getResource('blobs').get(\n            params,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n\n    public updateBlob(blob_id: string, data: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('blobs').update(\n            {\n                blob_id: blob_id\n            },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public createBlob(data: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('blobs').save(\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public deleteBlobById(id: string, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('blobs').delete(\n            { blob_id: id },\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass BlobsDataProvider implements IBlobsDataProvider {\n    private _service: IBlobsDataService;\n    private RESOURCE: string = 'blobs'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new BlobsData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipBlobsData', ['pipRest'])\n    .provider('pipBlobsData', BlobsDataProvider);\n\n\n","export class File {\n    /* Identification */\n    public id: string;\n    public group: string;\n    public name: string;\n\n    /* Content */\n    public description: string;\n    public content_id: string;\n    public content_uri: string;\n    public thumbnail_id: string;\n    public thumbnail_uri: string;\n    public create_time: Date;\n    public expire_time: Date;\n    public attributes: any;//StringValueMap;\n\n    /* Custom fields */\n    public custom_hdr: any;\n    public custom_dat: any;\n\n\n}\n\n","import { File } from './FileInfo';\nexport class FileInfoDataPage {\n    data: File[];\n    total: number;\n}\n","import { IFilesDataService, IFilesDataProvider } from './IFilesDataService';\n\nclass FilesData implements IFilesDataService {\n    private RESOURCE: string = 'files';\n\n    constructor(\n        private $stateParams: angular.ui.IStateParamsService,\n        private pipRest: pip.rest.IRestService,\n        private pipSession: pip.services.ISessionService\n    ) { \"ngInject\"; }\n\n    public readFiles(params: any, start: number = 0, take: number = 100, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        params = params || {};\n        params.skip = start;\n        params.total = true;\n        params.take = take;\n        return this.pipRest.getResource('files').get(\n            params,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public readFilesGroups(successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n\n        return this.pipRest.getResource('files_groups').get(\n            null,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data.data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public updateFile(file_id: string, data: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('files').update(\n            {\n                file_id: file_id\n            },\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public createFile(data: any, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('files').save(\n            data,\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n    public deleteFileById(id: string, successCallback?: (data: any) => void, errorCallback?: (error: any) => void): angular.IPromise<any> {\n        return this.pipRest.getResource('files').delete(\n            { file_id: id },\n            (data: any) => {\n                if (successCallback) {\n                    successCallback(data);\n                }\n            },\n            (error: any) => {\n                if (errorCallback) {\n                    errorCallback(error);\n                }\n            });\n    }\n\n}\n\nclass FilesDataProvider implements IFilesDataProvider {\n    private _service: IFilesDataService;\n    private RESOURCE: string = 'files'\n\n    constructor() { }\n\n    public $get(\n        $stateParams: angular.ui.IStateParamsService,\n        pipRest: pip.rest.IRestService,\n        pipSession: pip.services.ISessionService\n    ) {\n        \"ngInject\";\n\n        if (this._service == null) {\n            this._service = new FilesData($stateParams, pipRest, pipSession);\n        }\n\n        return this._service;\n    }\n\n}\n\nangular\n    .module('pipFilesData', ['pipRest'])\n    .provider('pipFilesData', FilesDataProvider);\n\n\n","'use strict';\n\n\nexport class FileDialogData {\n    public Collection: string;\n    public fileName: string;\n    public description: string;\n    public contentType: string;\n    public content: string;\n}\nexport class AddFileDialogController {\n\n    public $mdDialog: angular.material.IDialogService;\n    public theme: string;\n    public edit: boolean;\n    public file: FileDialogData;\n    public localFile: any;\n    public filesCollections: string[];\n    public callback: Function;\n    public errorCallback: Function;\n    public cancel: Function;\n    public retry: Function;\n    public setFile: Function;\n\n    constructor(\n        params,\n        $mdDialog: angular.material.IDialogService,\n        $rootScope,\n        private pipFileUpload: pip.files.IFileUploadService,\n        private pipRest: pip.rest.IRestService) {\n        \"ngInject\";\n\n        //this.pipFileUpload.globalProgress = null;\n        this.$mdDialog = $mdDialog;\n        this.theme = $rootScope.$theme;\n        this.file = params.file || {};\n        this.errorCallback = params.errorCallback;\n        this.callback = params.callback;\n        this.filesCollections = params.filesCollection;\n        if (params.file) {\n            this.edit = true;\n        }\n        this.cancel = () => { this.onCancel(); };\n        this.retry = () => { this.onOk(); };\n        this.setFile = (file) => {\n            this.localFile = file;\n        }\n    }\n\n    public onOk() {\n\n        if (!this.edit) {\n            if (this.localFile == null) {\n                return;\n            }\n\n            let uploadUrl: string = this.pipRest.serverUrl + \"/api/1.0/blobs\";\n\n            this.pipFileUpload.upload(\n                this.localFile,\n                uploadUrl,\n                (data: any, err: any) => {\n                    console.log(data);\n                    data.description = this.file.description;\n                    data.collection = this.file.Collection;\n                    if (!err) {\n                        this.$mdDialog.hide(data);\n                    }\n                }\n            );\n        } else {\n            this.$mdDialog.hide(this.file);\n        }\n\n    }\n    /*\n      public globalProgress():string {\n          return this.pipFileUpload.globalProgress;\n      }*/\n\n    public onCancel(): void {\n        this.$mdDialog.cancel();\n    }\n\n\n    public filterFilesCollections(search: string) {\n        let result = [];\n        _.each(this.filesCollections, (files: string) => {\n            if (files.toLowerCase().indexOf(search.toLowerCase()) > -1) result.push(files);\n        });\n\n        return result;\n    }\n}\n\nangular\n    .module('pipAddFileDialog', ['ngMaterial', 'pipFiles', 'pipFiles.Templates'])\n    .controller('pipAddFileDialogController', AddFileDialogController);\n\nimport './AddFilesService';","\n\nexport interface IAddFilesService {\n    show(params: any, successCallback?: (SVGFilterElement) => void, cancelCallback?: () => void): any;\n}\n\nclass AddFilesService implements IAddFilesService {\n    public _mdDialog: angular.material.IDialogService;\n    public constructor($mdDialog: angular.material.IDialogService) {\n        this._mdDialog = $mdDialog;\n    }\n    public show(params, successCallback?: (file) => void, cancelCallback?: () => void) {\n         this._mdDialog.show({\n            targetEvent: params.event,\n            templateUrl: 'files/AddFilesDialog.html',\n            controller: 'pipAddFileDialogController',\n            controllerAs: 'vm',\n            locals: {params: params},\n            clickOutsideToClose: true\n         })\n        .then((file) => {\n            if (successCallback) {\n                successCallback(file);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n                \n    }\n    \n}\n\nangular\n    .module('pipAddFileDialog')\n    .service('pipAddFileDialog', AddFilesService);","class FilesController {\n    constructor(\n        private $window: ng.IWindowService,\n        $scope: ng.IScope,\n        $state: ng.ui.IStateService,\n        $rootScope: ng.IRootScopeService,\n        $mdMedia: angular.material.IMedia,\n        $injector: angular.auto.IInjectorService,\n        private pipNavService: pip.nav.INavService\n    ) {\n        \"ngInject\";\n\n        let pipMedia = $injector.has('pipMedia') ? $injector.get('pipMedia') : null;\n        this.appHeader();\n    \n    }\n\n    private appHeader(): void {\n        this.pipNavService.appbar.parts = {\n            logo: false,\n            icon: false,\n            title: 'breadcrumb'\n        };\n        this.pipNavService.appbar.addShadow();\n        this.pipNavService.icon.showMenu();\n        this.pipNavService.breadcrumb.text = 'Files';\n        this.pipNavService.actions.hide();\n    }\n\n    public onRetry() {\n        this.$window.history.back();\n    }\n}\n\nfunction configureFilesRoute(\n    $injector: angular.auto.IInjectorService,\n    $stateProvider//: ng.ui.IStateProvider\n) {\n    \"ngInject\";\n\n    $stateProvider\n        .state('files', {\n            url: '/files',\n            controller: FilesController,\n            auth: false,\n            controllerAs: '$ctrl',\n            templateUrl: 'files/FilesPage.html'\n        });\n}\n\n\n\n(() => {\n\n    angular\n        .module('pipFilesPage', ['pipNav'])\n        .config(configureFilesRoute)\n\n})();\n","import { IFilesDataService } from '../data/IFilesDataService';\n\n\n//import { IAddFilesService } from \"./AddFilesService\"\nimport {\n    FileInfoDataPage\n} from \"../data/FileInfoDataPage\";\nimport {\n    File\n} from \"../data/FileInfo\";\n\nimport {\n    IAddFilesService\n} from './AddFilesService';\n\nclass ToolsFilesState {\n    static Progress: string = 'progress';\n    static Data: string = 'data';\n    static Empty: string = 'empty';\n}\n\n\ninterface IFilesPanelBindings {\n    [key: string]: any;\n}\n\nconst FilesPanelBindings: IFilesPanelBindings = {\n\n}\n\nclass FilesPanelChanges implements ng.IOnChangesObject, IFilesPanelBindings {\n    [key: string]: ng.IChangesObject<any>;\n\n}\n\nclass FilesPanelController {\n    //private _dialog: IAddFilesService;\n    private _start: number = 0;\n    public currentSection: any;\n     public filesSections: any;\n    public selectIndex: number;\n    public files: any;\n    public details: boolean;\n    public state: string;\n    public error: string = null;\n    public transaction: pip.services.Transaction;\n    public search: string = null;\n\n    public getSelectDropdown: Function;\n\n    constructor(\n        $window: ng.IWindowService,\n        private $location: ng.ILocationService,\n        $scope: ng.IScope,\n        pipNavService: pip.nav.INavService,\n        pipTransaction: pip.services.ITransactionService,\n        $log: ng.ILogService,\n        private pipConfirmationDialog,\n        private pipAddFileDialog: IAddFilesService,\n        private pipToasts: pip.controls.IToastService,\n        private $state: ng.ui.IStateService,\n        private pipFilesData: IFilesDataService,\n        public pipMedia: pip.layouts.IMediaService) {\n\n        this.transaction = pipTransaction.create('files');\n        this.state = ToolsFilesState.Progress;\n        this.readFiles();\n\n   this.selectIndex = $location.search().section || 0;\n\n        this.getSelectDropdown = () => {\n            this.selectItem(this.selectIndex);\n        }\n    }\n\n    private readFiles() {\n        this.transaction.begin('Reading files');\n        this.transaction.end();\n\n        this.pipFilesData.readFilesGroups((data) => {\n            this.filesSections = data;\n            this.onFilesRead(this.filesSections);\n            this.state = ToolsFilesState.Data;\n        })\n    }\n\n      public selectItem(index: number) {\n          this.search = this.files[this.selectIndex] ? this.files[this.selectIndex].Search : null;\n        this.selectIndex = index;\n\n        this.$location.search('section', this.filesSections[index]);\n\n        /*\n        if (this.pipMedia('xs')) {\n            this.configNavBack();\n        }\n        */\n    }\n\n    public onSearch() {\n        this.state = ToolsFilesState.Progress;\n        this.files[this.selectIndex] = {};\n        this.files[this.selectIndex].Search = this.search;\n        this.readFilesInSection(this.filesSections[this.selectIndex], this.selectIndex);\n    }\n\n    public clear() {\n        this.search = null;\n        this.onSearch();\n    }\n\n    public addFile(): void {\n\n        this.pipAddFileDialog.show({\n        },\n            (item) => {\n                //this.saveNewFileCallback(item);\n                this.saveNewFile(item);\n            });\n    }\n\n    private saveNewFile(item): void {\n        this.transaction.begin('add new file');\n        let newItem: File = new File();\n        newItem.thumbnail_id = item.id;\n        newItem.content_id = item.id;\n        newItem.name = item.name;\n        newItem.description = item.description;\n        newItem.group = item.collection;\n        this.pipFilesData.createFile(newItem, (data) => {\n\n            this.saveNewFileCallback(data);\n        })\n        this.transaction.begin('add new file');\n\n        //this.contentType(newItem, item);\n\n    }\n\n    private contentType(newItem, item) {\n        try {\n            let jsonContent = JSON.parse(item.content);\n            /*\n                        this.pipFilesData.uploadFile(newItem, item.content,\n                            (file: FileInfo) => {\n                                this.saveNewFileCallback(file);\n            \n                            },\n                            (error) => {\n                                this.saveNewFileError(error);\n            \n                            })*/\n        } catch (err) {\n            /*this.pipFilesData.uploadBinaryFile(newItem, item.content,\n                (file: FileInfo) => {\n                    this.saveNewFileCallback(file);\n                },\n                (error) => {\n                    this.saveNewFileError(error);\n                })*/\n        }\n    }\n\n    public saveNewFileError(error) {\n        this.transaction.end(error.data || error);\n        this.pipToasts.showError('File don\\'t create from server! ' + error, null, null, null, null);\n    }\n\n    public openDeleteDialog(item: File, index: number) {\n        this.pipConfirmationDialog.show(\n            {\n                event: event,\n                title: 'Delete file?',\n                ok: 'Delete',\n                cancel: 'Cancel'\n            },\n            () => {\n                this.deleteFile(item, index);\n            },\n            () => {\n                console.log('You disagreed');\n            }\n        );\n    }\n\n    public deleteFile(item: File, index: number) {\n        this.transaction.begin('delete');\n        this.pipFilesData.deleteFileById(item.id,\n            () => {\n                _.remove(this.files[index].Items, {\n                    id: item.id\n                });\n\n                if (index >= this.files[index].length - 1) {\n                    this.selectIndex = 0;\n                }\n\n                if (this.files[index].Items.length == 0) {\n                    _.remove(this.filesSections, (data: string) => {\n                        return item.group == data\n                    });\n                    _.remove(this.files, (data, dataIndex: number) => { return dataIndex == index });\n                    if (this.files[index].length == 0) {\n                        this.state = ToolsFilesState.Empty;\n                    }\n                }\n                this.transaction.end();\n            },\n            (error: any) => {\n                this.deleteFileError(error);\n            })\n    }\n\n    public deleteFileError(error) {\n        this.transaction.end();\n        this.pipToasts.showError('File don\\'t delete from server! ' + error, null, null, null, null);\n    }\n\n    public updateFile(oldItem: File): void {\n\n        this.pipAddFileDialog.show({\n            file: {\n                fileName: oldItem.name,\n                description: oldItem.description\n            }\n        },\n            (item) => {\n                this.updateFileItem(item, oldItem);\n            });\n    }\n\n    private updateFileItem(item, oldItem: File) {\n\n        let newItem: File = _.cloneDeep(oldItem);\n        newItem.description = item.description;\n\n\n        /*this.pipFilesData.updateFile(newItem, null, (data) => {\n\n            if (newItem.collection == oldItem.collection && index > -1) {\n                let indexItem = _.findIndex(this.files[index].Items, { Id: newItem.id });\n                this.files[index].Items[indexItem] = newItem;\n                //this.selectIndex = index;\n            } else {\n                if (index > -1) {\n                    this.files[index].Items.push(newItem);\n                } else {\n                    this.filesSections.push(newItem.collection);\n                    this.files[index].push({ Start: 0, Items: [newItem] });\n                }\n                _.remove(this.files[oldIndex].Items, { Id: newItem.id });\n                if (this.files[oldIndex].Items.length == 0) {\n                    _.remove(this.files, (data, dataIndex: number) => { return dataIndex == oldIndex });\n                    _.remove(this.filesSections, (data: string) => { return data == oldItem.collection });\n                }\n                this.selectItem(_.findIndex(this.filesSections, (name: string) => { return newItem.collection == name }));\n            }\n        }, (error: any) => {\n            this.updateFileError(error);\n        });*/\n\n    }\n\n    private updateFileError(error: any) {\n        this.transaction.end();\n        this.pipToasts.showError('File don\\'t update from server! ' + error, null, null, null, null);\n    }\n\n\n    private saveNewFileCallback(item: File): void {\n\n\n     let index: number = _.findIndex(this.filesSections, (file: string) => {\n            return file == item.group;\n        })\n\n        if (index != -1) {\n            //this.updateFileItems(this.filesSections[index], 0);\n            this.files[index].Items.push(item);\n            this.selectIndex = index;\n        } else {\n            this.filesSections.push(item.group);\n            if (!this.files) {\n                this.files = [{ Start: 0, Items: [item] }];\n                this.selectIndex = 0;\n            } else {\n                this.files[index].push({ Start: 0, Items: [item] });\n                this.selectIndex = this.files[index].length - 1;\n            }\n        }\n\n        this.transaction.end();\n    }\n\n    private filter(section: string) {\n        let filter = {};\n        filter['Collection'] = section;\n        if (this.search) {\n            filter['Search'] = this.search;\n        }\n        return filter;\n    }\n\n    private onFilesRead(filesSections) {\n         this.filesSections = filesSections;\n        this.files = [];\n\n        _.each(this.filesSections, (section: string, index: number) => {\n            this.readFilesInSection(section, index);\n        });\n    }\n\n    private readFilesInSection(section: string, index: number) {\n\n    if (section === this.$location.search().section) {\n            this.selectIndex = index;\n        }\n        if (!this.files[index]) { this.files[index] = { Start: 0 }; }\n        if (!this.files[index].Items) { this.files[index].Items = []; }\n        //this.files[index] = [{title: section + \" title\", description: section + \" description\"}];\n        this.pipFilesData.readFiles({group:section, search: this.files[this.selectIndex] ? this.files[this.selectIndex].Search : null}, this.files[index].Start || 0, 100, (files: FileInfoDataPage) => {\n            let start: number = this.files[index].Start || 0;\n\n            if (files.data.length > 0 || (start !== 0 && this.files[index].Items.length > 0)) {\n                this.state = ToolsFilesState.Data;\n                _.each(files.data, (item: File) => {\n\n                    item['ext'] = _.split(item.name, '.')[_.split(item.name, '.').length - 1];\n                    if (this.files[index].Items[start]) {\n                        this.files[index].Items[start] = item;\n                    } else {\n                        this.files[index].Items.push(item);\n                    }\n                    start++;\n                })\n                this.files[index].Start += files.data.length;\n            } else {\n                this.state = ToolsFilesState.Empty;\n            }\n            this.transaction.end();\n        }, (error: any) => {\n            this.readFilesError(error);\n        });\n    }\n\n    private readFilesError(error: any) {\n        this.transaction.end(error);\n        this.pipToasts.showError('Reading files have errors on server! ' + error, null, null, null, null);\n    }\n\n    private onError(error) {\n        this.error = error;//this._bbHandleErrors.parseError(error);\n        this.transaction.end(error);\n    }\n\n    private download(item: File) {\n        /* this.pipFilesData.getFileUrl(item.id, (data: string) => {\n             var link = document.createElement(\"a\");\n             link.download = item.name;\n             link.href = data;\n             link.click();\n \n         }, (error) => {\n             this.transaction.end(error);\n             this.pipToasts.showError('Download files have errors on server! ' + error, null, null, null, null);\n         })*/\n    }\n\n    private configNavBack() {\n        //this.details = true;\n        /*\n                this._bbNavigation.reset();\n                this._pipNavService.breadcrumb.items = [\n                    <pip.nav.BreadcrumbItem>{\n                        title: \"Troubleshooting\",\n                        click: () => {\n                            this._state.go('tools.home');\n                        }\n                    },\n                    <pip.nav.BreadcrumbItem>{\n                        title: \"Files\",\n                        click: () => {\n                            //this.details = false;\n                            this.$location.search('section', null);\n                            this.appHeader();\n                        }\n                    },\n                    <pip.nav.BreadcrumbItem>{\n                        title: \"Files Details\"\n                    }\n                ];*/\n    }\n\n}\n\n(() => {\n    angular\n        .module('pipFilesPanel', ['pipLists','pipBehaviors', 'pipButtons'])\n        .component('pipFilesPanel', {\n            bindings: FilesPanelBindings,\n            templateUrl: 'files/FilesPanel.html',\n            controller: FilesPanelController\n        })\n\n})();\n","﻿(() => {\n    'use strict';\n\n    angular.module('pipContent', [\n        'pipDirective',\n\n        'pipFilesResources',\n        'pipFilesData',\n        'pipAddFileDialog',\n        'pipFilesPanel',\n        'pipFilesPage',\n\n        'pipBlobsResources',\n        'pipBlobsData',        \n        'pipAddBlobsDialog',\n        'pipBlobsPanel',\n        'pipBlobsPage',\n\n    ]);\n})();\n","function configBlobsResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerPagedCollection('blobs', '/api/v1/blobs/:blob_id',\n        { blob_id: '@blob_id' },\n        {\n            page: { method: 'GET', isArray: false },\n            update: { method: 'PUT' }\n        });\n}\n\nangular\n    .module('pipBlobsResources', [])\n    .config(configBlobsResources);","function configFilesResources(pipRestProvider: pip.rest.IRestProvider) {\n    // resource, url, path, defaultParams, actions\n    pipRestProvider.registerPagedCollection('files', '/api/v1/files/:file_id',\n        { file_id: '@file_id' },\n        {\n            page: { method: 'GET', isArray: false },\n            update: { method: 'PUT' }\n        });\n    pipRestProvider.registerPagedCollection('files_groups', '/api/v1/files/groups');\n}\n\nangular\n    .module('pipFilesResources', [])\n    .config(configFilesResources);","(function(module) {\ntry {\n  module = angular.module('pipAdminContent.Templates');\n} catch (e) {\n  module = angular.module('pipAdminContent.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('blobs/AddBlobsDialog.html',\n    '<md-dialog class=\"pip-dialog layout-column bb-add-blob\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body p24-flex pip-scroll\" ng-if=\"!vm.globalProgress()\"><h3 class=\"tm0\" ng-if=\"!vm.edit\">New blob</h3><h3 class=\"tm0\" ng-if=\"vm.edit\">Edit blob</h3><div ng-show=\"!vm.edit\"><pip-file-select pip-change=\"vm.setBlob\" pip-local-file=\"vm.localBlob\"></pip-file-select></div></div><div class=\"pip-footer\" ng-if=\"!vm.globalProgress()\"><div><md-button class=\"md-accent\" ng-click=\"vm.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">Upload</md-button></div></div><pip-file-progress ng-if=\"vm.globalProgress()\" pip-cancel=\"vm.cancel\" pip-retry=\"vm.retry\" pip-name=\"vm.localBlob.name\"></pip-file-progress></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipAdminContent.Templates');\n} catch (e) {\n  module = angular.module('pipAdminContent.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('blobs/BlobsPage.html',\n    '<pip-blobs-panel></pip-blobs-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipAdminContent.Templates');\n} catch (e) {\n  module = angular.module('pipAdminContent.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('blobs/BlobsPanel.html',\n    '<pip-document><md-button class=\"md-fab md-accent md-fab-bottom-right\" style=\"z-index: 55\" ng-if=\"$ctrl.state != \\'progress\\'\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"add\" ng-click=\"$ctrl.addBlob()\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><div class=\"pip-body p0\"><md-list class=\"pip-ref-list tp0\" ng-if=\"$ctrl.state == \\'data\\'\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"blob in $ctrl.blobs\"><div class=\"pip-pic flex-fixed lm16 layout-row layout-align-center-center\"></div><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\">{{blob.name}} <span ng-if=\"blob.size\">•</span> {{blob.size}}</div><p class=\"pip-subtitle pip-blob-message\">{{blob.content_type}}</p></div><div class=\"pip-pic rm0\"><md-button class=\"md-icon-button flex-fixed\" ng-if=\"blob.Error\" ng-click=\"$ctrl.onErrorDetails(blob)\" aria-label=\"error\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button></div></md-list-item></md-list></div></pip-document>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipAdminContent.Templates');\n} catch (e) {\n  module = angular.module('pipAdminContent.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('files/AddFilesDialog.html',\n    '<md-dialog class=\"pip-dialog layout-column bb-add-file\" width=\"400\" md-theme=\"{{vm.theme}}\"><div class=\"pip-body p24-flex pip-scroll\" ng-if=\"!vm.globalProgress()\"><h3 class=\"tm0\" ng-if=\"!vm.edit\">New file</h3><h3 class=\"tm0\" ng-if=\"vm.edit\">Edit file</h3><md-autocomplete flex=\"\" required=\"\" class=\"bm0\" md-input-name=\"autocompleteField\" md-search-text=\"vm.file.Collection\" md-items=\"item in vm.filterFilesCollections(vm.file.Collection)\" md-no-cache=\"true\" md-require-match=\"false\" md-floating-label=\"Collection\"><md-item-template><span>{{::item}}</span></md-item-template></md-autocomplete><md-input-container class=\"md-block flex bm0 tm0\"><label>Description</label> <input ng-model=\"vm.file.description\"></md-input-container><div ng-show=\"!vm.edit\"><pip-file-select pip-change=\"vm.setFile\" pip-local-file=\"vm.localFile\"></pip-file-select></div></div><div class=\"pip-footer\" ng-if=\"!vm.globalProgress()\"><div><md-button class=\"md-accent\" ng-click=\"vm.onCancel()\">Cancel</md-button><md-button class=\"md-accent\" ng-click=\"vm.onOk()\">Upload</md-button></div></div><pip-file-progress ng-if=\"vm.globalProgress()\" pip-cancel=\"vm.cancel\" pip-retry=\"vm.retry\" pip-name=\"vm.localFile.name\"></pip-file-progress></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipAdminContent.Templates');\n} catch (e) {\n  module = angular.module('pipAdminContent.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('files/FilesPage.html',\n    '<pip-files-panel></pip-files-panel>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipAdminContent.Templates');\n} catch (e) {\n  module = angular.module('pipAdminContent.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('files/FilesPanel.html',\n    '<div class=\"pip-main-menu pip-files\" ng-class=\"{\\'pip-single-content\\': $ctrl.details}\" ng-if=\"$ctrl.pipMedia(\\'gt-sm\\')\"><div class=\"pip-menu\"><div class=\"pip-list-container pip-scroll\"><md-list class=\"pip-simple-list tp0\" pip-selected=\"$ctrl.selectIndex\" pip-select=\"$ctrl.selectItem($event.index)\"><md-list-item class=\"pip-simple-list-item pip-selectable {{ $ctrl.selectIndex == $index ? \\'selected\\' : \\'\\' }}\" md-ink-ripple=\"\" ng-repeat=\"section in $ctrl.filesSections\"><p class=\"pip-title text-body2\">{{ section || \\'Undefined\\' }}</p></md-list-item></md-list></div></div><div class=\"pip-content-container\"><div class=\"layout-column\"><pip-document class=\"pip-scroll\"><div class=\"pip-filter-row layout-row layout-align-start-center pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" pip-on-search=\"$ctrl.onSearch()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row></div><div class=\"pip-body p0\"><div class=\"pip-menu\" style=\"width: 100% !important;\" ng-if=\"$ctrl.state == \\'data\\'\"><div class=\"pip-list-container pip-scroll\"><md-list class=\"pip-ref-list tp0\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"file in $ctrl.files[$ctrl.selectIndex].Items\" ng-click=\"$mdOpenMenu()\"><div class=\"pip-pic tm0 rm0\" ng-if=\"file.content_type == \\'json\\' || file.content_type == \\'jpeg\\' || file.content_type == \\'xls\\' || file.content_type == \\'xml\\' || file.content_type == \\'pdf\\' || file.content_type == \\'doc\\'\"><md-icon md-svg-icon=\"bootbarn-icons:file-format-{{file.content_type}}\"></md-icon></div><div class=\"pip-pic tm0 rm0\" ng-if=\"file.content_type != \\'json\\' && file.content_type != \\'jpeg\\' && file.content_type != \\'xls\\' && file.content_type != \\'pdf\\' && file.content_type != \\'xml\\' && file.content_type != \\'doc\\'\"><md-icon md-svg-icon=\"bootbarn-icons:file-format-custom\"></md-icon></div><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\">{{file.name}}</div><p class=\"pip-subtitle\">{{file.description}}</p></div><div class=\"pip-pic rm0 tm0\"><md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdOpenMenu()\" aria-label=\"xxx\"><md-icon md-menu-origin=\"\" md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item><md-button ng-click=\"$ctrl.download(file)\" aria-label=\"xxx\">Download</md-button></md-menu-item><md-menu-item><md-button ng-click=\"$ctrl.updateFile(file)\" aria-label=\"xxx\">Update</md-button></md-menu-item><md-menu-item ng-click=\"$ctrl.openDeleteDialog(file, $ctrl.selectIndex)\"><md-button aria-label=\"xxx\">Delete</md-button></md-menu-item></md-menu-content></md-menu></div></md-list-item></md-list></div></div></div><div class=\"layout-column layout-align-center-center flex pip-empty pip-scroll\" ng-if=\"$ctrl.state == \\'progress\\' || $ctrl.state == \\'empty\\'\"><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There are no events right now…<br>Try again later or change filter options</div></div><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'progress\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading Files<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div></pip-document></div></div></div><md-button class=\"md-fab md-accent md-fab-bottom-right\" style=\"z-index: 55\" ng-if=\"$ctrl.state != \\'progress\\'\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"add\" ng-click=\"$ctrl.addFile()\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><pip-dropdown pip-actions=\"$ctrl.filesSections\" pip-active-index=\"$ctrl.selectIndex\" pip-change=\"$ctrl.getSelectDropdown()\" ng-if=\"($ctrl.pipMedia(\\'xs\\') || $ctrl.pipMedia(\\'sm\\')) && $ctrl.state == \\'data\\'\"></pip-dropdown><div class=\"pip-main-menu pip-files\" ng-if=\"($ctrl.pipMedia(\\'xs\\') || $ctrl.pipMedia(\\'sm\\')) && $ctrl.state == \\'data\\'\"><div class=\"pip-filter-row layout-row layout-align-start-center pip-search-panel rp0 lp0 pip-filter-search-row flex\"><pip-search-row pip-search=\"$ctrl.search\" pip-on-search=\"$ctrl.onSearch()\" xxxng-disabled=\"$ctrl.transaction.busy()\"></pip-search-row></div><pip-simple class=\"pip-scroll\"><div class=\"pip-menu\" style=\"width: 100% !important;\"><div class=\"pip-list-container pip-scroll\"><md-list class=\"pip-ref-list tp0\"><md-list-item class=\"pip-ref-list-item divider-bottom\" md-ink-ripple=\"\" ng-repeat=\"file in $ctrl.files[$ctrl.selectIndex].Items\"><div class=\"pip-pic tm0 rm0\" ng-if=\"file.content_type == \\'json\\' || file.content_type == \\'jpeg\\' || file.content_type == \\'pdf\\' || file.content_type == \\'xls\\' || file.content_type == \\'xml\\' || file.content_type == \\'doc\\'\"><md-icon md-svg-icon=\"bootbarn-icons:file-format-{{file.content_type}}\"></md-icon></div><div class=\"pip-pic rm0\" ng-if=\"file.content_type != \\'json\\' && file.content_type != \\'jpeg\\' && file.content_type != \\'xls\\' && file.content_type != \\'xml\\' && file.content_type != \\'pdf\\' && file.content_type != \\'doc\\'\"><md-icon md-svg-icon=\"bootbarn-icons:file-format-custom\"></md-icon></div><div class=\"pip-content flex\"><div class=\"text-body2 text-overflow\">{{file.name}}</div><p class=\"pip-subtitle\">{{file.Description}}</p></div><div class=\"pip-pic rm0\"><md-menu><md-button class=\"md-icon-button\" ng-click=\"$mdOpenMenu()\" aria-label=\"xxx\"><md-icon md-menu-origin=\"\" md-svg-icon=\"icons:vdots\"></md-icon></md-button><md-menu-content width=\"3\"><md-menu-item><md-button ng-click=\"$ctrl.download(file)\" aria-label=\"xxx\">Download</md-button></md-menu-item><md-menu-item><md-button ng-click=\"$ctrl.updateFile(file)\" aria-label=\"xxx\">Update</md-button></md-menu-item><md-menu-item ng-click=\"$ctrl.openDeleteDialog(file, $ctrl.selectIndex)\"><md-button aria-label=\"xxx\">Delete</md-button></md-menu-item></md-menu-content></md-menu></div></md-list-item></md-list></div></div></pip-simple></div><div class=\"layout-column layout-align-center-center flex pip-empty pip-scroll\" ng-if=\"($ctrl.state == \\'progress\\' || $ctrl.state == \\'empty\\') && !$ctrl.pipMedia(\\'gt-sm\\')\"><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'empty\\'\"><img src=\"images/EmptyState.svg\" class=\"pip-pic\"><div class=\"pip-text\">There are no events right now…<br>Try again later or change filter options</div></div><div class=\"pip-empty\" ng-if=\"$ctrl.state == \\'progress\\'\"><img src=\"images/LoadingState.svg\" class=\"pip-pic\"><div class=\"pip-text\">Loading files<md-progress-linear md-mode=\"indeterminate\" class=\"tm24\"></md-progress-linear></div></div></div><md-progress-linear md-mode=\"indeterminate\" style=\"position: absolute; z-index: 100\" ng-show=\"$ctrl.transaction.busy() && $ctrl.state != \\'progress\\'\"></md-progress-linear>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipAdminContent.Templates');\n} catch (e) {\n  module = angular.module('pipAdminContent.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('common/search/SearchRow.html',\n    '<div class=\"pip-search layout-row layout-align-start-center flex\"><md-button class=\"md-icon-button pip-search-button flex-fixed\" ng-click=\"searchRow.onSearch()\" ng-disabled=\"searchRow.isDisable()\" aria-label=\"search\"><md-icon md-svg-icon=\"icons:search\"></md-icon></md-button><md-input-container md-no-float=\"\" class=\"md-block tm8 bm8\" ng-disabled=\"searchRow.isDisable()\"><input ng-model=\"searchRow.localSearch\" placeholder=\"Search...\" ng-keypress=\"searchRow.onKeyPress($event)\" ng-change=\"searchRow.onSearch()\"></md-input-container><md-button class=\"md-icon-button flex-fixed pip-search-clear-button\" ng-if=\"searchRow.localSearch != \\'\\' && searchRow.localSearch\" ng-click=\"searchRow.onClear()\" n=\"\" ng-disabled=\"searchRow.isDisable()\" aria-label=\"search\"><md-icon md-svg-icon=\"icons:delete\"></md-icon></md-button></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-admin-content-html.min.js.map\n"]}